# Generated by Django 5.0 on 2024-12-12 22:38

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CategoriaCusto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, unique=True)),
                ('tipo', models.CharField(choices=[('fixo', 'Custo Fixo'), ('variavel', 'Custo Variável'), ('investimento', 'Investimento')], default='fixo', max_length=20)),
                ('alocacao', models.CharField(choices=[('fazenda', 'Fazenda'), ('lote', 'Lote'), ('estoque', 'Estoque'), ('maquina', 'Máquina'), ('benfeitoria', 'Benfeitoria'), ('pastagem', 'Pastagem')], default='fazenda', max_length=20, verbose_name='Alocação')),
            ],
            options={
                'verbose_name': 'Categoria de Custo',
                'verbose_name_plural': 'Categorias de Custos',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='EduzzTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_id', models.CharField(max_length=100, unique=True)),
                ('email', models.EmailField(max_length=254)),
                ('status', models.CharField(choices=[('pending', 'Pendente'), ('paid', 'Pago'), ('canceled', 'Cancelado'), ('refunded', 'Reembolsado')], max_length=20)),
                ('product_id', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='FinalidadeLote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'verbose_name': 'Finalidade de Lote',
                'verbose_name_plural': 'Finalidades de Lote',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='MotivoMorte',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'verbose_name': 'Motivo de Morte',
                'verbose_name_plural': 'Motivos de Morte',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='Raca',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'verbose_name': 'Raça',
                'verbose_name_plural': 'Raças',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='VariedadeCapim',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, unique=True)),
                ('nome_cientifico', models.CharField(blank=True, max_length=100, null=True, verbose_name='Nome Científico')),
            ],
            options={
                'verbose_name': 'Variedade de Capim',
                'verbose_name_plural': 'Variedades de Capim',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='CategoriaAnimal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('sexo', models.CharField(choices=[('M', 'Macho'), ('F', 'Fêmea'), ('A', 'Ambos')], max_length=1)),
            ],
            options={
                'verbose_name': 'Categoria de Animal',
                'verbose_name_plural': 'Categorias de Animais',
                'ordering': ['nome'],
                'unique_together': {('nome', 'sexo')},
            },
        ),
        migrations.CreateModel(
            name='Fazenda',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=200, verbose_name='Nome da Fazenda')),
                ('arrendada', models.BooleanField(default=False, verbose_name='Arrendada')),
                ('inscricao_estadual', models.CharField(blank=True, max_length=20, verbose_name='Inscrição Estadual')),
                ('cidade', models.CharField(max_length=100, verbose_name='Cidade')),
                ('estado', models.CharField(choices=[('AC', 'Acre'), ('AL', 'Alagoas'), ('AP', 'Amapá'), ('AM', 'Amazonas'), ('BA', 'Bahia'), ('CE', 'Ceará'), ('DF', 'Distrito Federal'), ('ES', 'Espírito Santo'), ('GO', 'Goiás'), ('MA', 'Maranhão'), ('MT', 'Mato Grosso'), ('MS', 'Mato Grosso do Sul'), ('MG', 'Minas Gerais'), ('PA', 'Pará'), ('PB', 'Paraíba'), ('PR', 'Paraná'), ('PE', 'Pernambuco'), ('PI', 'Piauí'), ('RJ', 'Rio de Janeiro'), ('RN', 'Rio Grande do Norte'), ('RS', 'Rio Grande do Sul'), ('RO', 'Rondônia'), ('RR', 'Roraima'), ('SC', 'Santa Catarina'), ('SP', 'São Paulo'), ('SE', 'Sergipe'), ('TO', 'Tocantins')], max_length=2, verbose_name='Estado')),
                ('area_total', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Área Total (ha)')),
                ('valor_hectare', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Valor do Hectare (R$)')),
                ('custo_oportunidade', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Custo de Oportunidade (R$)')),
                ('data_cadastro', models.DateTimeField(auto_now_add=True)),
                ('data_atualizacao', models.DateTimeField(auto_now=True)),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Fazenda',
                'verbose_name_plural': 'Fazendas',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='Lote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_lote', models.CharField(max_length=50, verbose_name='ID do Lote')),
                ('data_criacao', models.DateField(verbose_name='Data de Criação')),
                ('fazenda', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.fazenda', verbose_name='Fazenda')),
                ('finalidade', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.finalidadelote', verbose_name='Finalidade do Lote')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Lote',
                'verbose_name_plural': 'Lotes',
                'ordering': ['id_lote'],
            },
        ),
        migrations.CreateModel(
            name='Animal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brinco_visual', models.CharField(max_length=50, unique=True, verbose_name='Brinco Visual')),
                ('brinco_eletronico', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='Brinco Eletrônico')),
                ('data_nascimento', models.DateField(verbose_name='Data de Nascimento')),
                ('data_entrada', models.DateField(verbose_name='Data de Entrada')),
                ('peso_entrada', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, verbose_name='Peso de Entrada (kg)')),
                ('situacao', models.CharField(choices=[('ATIVO', 'Ativo'), ('VENDIDO', 'Vendido'), ('MORTO', 'Morto'), ('ABATIDO', 'Abatido')], default='ATIVO', max_length=10, verbose_name='Situação')),
                ('data_saida', models.DateField(blank=True, null=True, verbose_name='Data de Saída')),
                ('valor_compra', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Valor de Compra (R$)')),
                ('custo_fixo', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Custo Fixo (R$)')),
                ('custo_variavel', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Custo Variável (R$)')),
                ('valor_total', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Valor Total (R$)')),
                ('valor_venda', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Valor de Venda/Abate (R$)')),
                ('primeiro_peso', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, verbose_name='Primeiro Peso (kg)')),
                ('data_primeiro_peso', models.DateField(blank=True, null=True, verbose_name='Data do Primeiro Peso')),
                ('data_cadastro', models.DateTimeField(auto_now_add=True)),
                ('data_atualizacao', models.DateTimeField(auto_now=True)),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('categoria_animal', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.categoriaanimal', verbose_name='Categoria Animal')),
                ('fazenda_atual', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.fazenda', verbose_name='Fazenda Atual')),
                ('lote', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.lote', verbose_name='Lote')),
            ],
            options={
                'verbose_name': 'Animal',
                'verbose_name_plural': 'Animais',
                'ordering': ['brinco_visual'],
            },
        ),
        migrations.CreateModel(
            name='ManejoSanitario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.DateField(verbose_name='Data do Manejo')),
                ('insumo', models.CharField(max_length=255, verbose_name='Insumo')),
                ('tipo_manejo', models.CharField(max_length=255, verbose_name='Tipo de Manejo')),
                ('dias_proximo_manejo', models.IntegerField(verbose_name='Dias para Próximo Manejo')),
                ('observacao', models.TextField(blank=True, null=True, verbose_name='Observação')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('animal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='manejos_sanitarios', to='core.animal')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Manejo Sanitário',
                'verbose_name_plural': 'Manejos Sanitários',
                'ordering': ['-data', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Pasto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_pasto', models.CharField(max_length=50, verbose_name='ID do Pasto')),
                ('nome', models.CharField(blank=True, max_length=100, null=True, verbose_name='Nome do Pasto')),
                ('area', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Área (ha)')),
                ('capacidade_ua', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Capacidade (UA/ha)')),
                ('coordenadas', models.JSONField(verbose_name='Coordenadas do Polígono')),
                ('data_cadastro', models.DateTimeField(auto_now_add=True)),
                ('data_atualizacao', models.DateTimeField(auto_now=True)),
                ('fazenda', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pastos', to='core.fazenda')),
                ('variedade_capim', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.variedadecapim', verbose_name='Variedade de Capim')),
            ],
            options={
                'verbose_name': 'Pasto',
                'verbose_name_plural': 'Pastos',
                'ordering': ['fazenda', 'id_pasto'],
            },
        ),
        migrations.CreateModel(
            name='MovimentacaoAnimal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('LOTE', 'Mudança de Lote'), ('PASTO', 'Mudança de Pasto')], max_length=5)),
                ('data_movimentacao', models.DateField()),
                ('motivo', models.CharField(blank=True, max_length=255, null=True, verbose_name='Motivo')),
                ('observacao', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('animal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='movimentacoes', to='core.animal')),
                ('lote_destino', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='movimentacoes_destino', to='core.lote')),
                ('lote_origem', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='movimentacoes_origem', to='core.lote')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('pasto_destino', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='movimentacoes_destino', to='core.pasto')),
                ('pasto_origem', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='movimentacoes_origem', to='core.pasto')),
            ],
            options={
                'verbose_name': 'Movimentação de Animal',
                'verbose_name_plural': 'Movimentações de Animais',
                'ordering': ['-data_movimentacao'],
            },
        ),
        migrations.AddField(
            model_name='animal',
            name='pasto_atual',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.pasto', verbose_name='Pasto Atual'),
        ),
        migrations.CreateModel(
            name='Pesagem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.DateField(verbose_name='Data da Pesagem')),
                ('peso', models.DecimalField(decimal_places=2, max_digits=7, verbose_name='Peso (kg)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('animal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pesagens', to='core.animal')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Pesagem',
                'verbose_name_plural': 'Pesagens',
                'ordering': ['-data', '-created_at'],
            },
        ),
        migrations.AddField(
            model_name='animal',
            name='raca',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.raca', verbose_name='Raça'),
        ),
        migrations.CreateModel(
            name='UnidadeMedida',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, verbose_name='Nome')),
                ('sigla', models.CharField(max_length=10, verbose_name='Sigla')),
                ('tipo', models.CharField(choices=[('PESO', 'Peso'), ('AREA', 'Área'), ('VOLUME', 'Volume'), ('COMPRIMENTO', 'Comprimento'), ('TEMPERATURA', 'Temperatura'), ('TEMPO', 'Tempo'), ('MONETARIO', 'Monetário'), ('OUTROS', 'Outros')], max_length=20, verbose_name='Tipo')),
                ('descricao', models.TextField(blank=True, verbose_name='Descrição')),
            ],
            options={
                'verbose_name': 'Unidade de Medida',
                'verbose_name_plural': 'Unidades de Medida',
                'ordering': ['tipo', 'nome'],
                'unique_together': {('nome', 'tipo')},
            },
        ),
        migrations.CreateModel(
            name='SubcategoriaCusto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('categoria', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subcategorias', to='core.categoriacusto')),
            ],
            options={
                'verbose_name': 'Subcategoria de Custo',
                'verbose_name_plural': 'Subcategorias de Custos',
                'ordering': ['categoria__nome', 'nome'],
                'unique_together': {('categoria', 'nome')},
            },
        ),
    ]
